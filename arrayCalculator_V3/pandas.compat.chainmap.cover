    1: from typing import (
           ChainMap,
           TypeVar,
       )
       
    1: _KT = TypeVar("_KT")
    1: _VT = TypeVar("_VT")
       
       
    2: class DeepChainMap(ChainMap[_KT, _VT]):
    1:     """
           Variant of ChainMap that allows direct updates to inner scopes.
       
           Only works when all passed mapping are mutable.
           """
       
    1:     def __setitem__(self, key: _KT, value: _VT) -> None:
               for mapping in self.maps:
                   if key in mapping:
                       mapping[key] = value
                       return
               self.maps[0][key] = value
       
    1:     def __delitem__(self, key: _KT) -> None:
               """
               Raises
               ------
               KeyError
                   If `key` doesn't exist.
               """
               for mapping in self.maps:
                   if key in mapping:
                       del mapping[key]
                       return
               raise KeyError(key)
