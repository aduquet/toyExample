    1: import warnings
    1: import numpy as np
    1: from numpy import nanmean, nansum
       
    1: __all__ = [
    1:     "median",
    1:     "nanmedian",
    1:     "nansum",
    1:     "nanmean",
    1:     "nanvar",
    1:     "nanstd",
    1:     "nanmin",
    1:     "nanmax",
    1:     "nanargmin",
    1:     "nanargmax",
    1:     "ss",
    1:     "anynan",
    1:     "allnan",
       ]
       
       
    1: def nanargmin(a, axis=None):
           "Slow nanargmin function used for unaccelerated dtypes."
           with warnings.catch_warnings():
               warnings.simplefilter("ignore")
               return np.nanargmin(a, axis=axis)
       
       
    1: def nanargmax(a, axis=None):
           "Slow nanargmax function used for unaccelerated dtypes."
           with warnings.catch_warnings():
               warnings.simplefilter("ignore")
               return np.nanargmax(a, axis=axis)
       
       
    1: def nanvar(a, axis=None, ddof=0):
           "Slow nanvar function used for unaccelerated dtypes."
           with warnings.catch_warnings():
               warnings.simplefilter("ignore")
               return np.nanvar(a, axis=axis, ddof=ddof)
       
       
    1: def nanstd(a, axis=None, ddof=0):
           "Slow nanstd function used for unaccelerated dtypes."
           with warnings.catch_warnings():
               warnings.simplefilter("ignore")
               return np.nanstd(a, axis=axis, ddof=ddof)
       
       
    1: def nanmin(a, axis=None):
           "Slow nanmin function used for unaccelerated dtypes."
           with warnings.catch_warnings():
               warnings.simplefilter("ignore")
               return np.nanmin(a, axis=axis)
       
       
    1: def nanmax(a, axis=None):
           "Slow nanmax function used for unaccelerated dtypes."
           with warnings.catch_warnings():
               warnings.simplefilter("ignore")
               return np.nanmax(a, axis=axis)
       
       
    1: def median(a, axis=None):
           "Slow median function used for unaccelerated dtypes."
           with warnings.catch_warnings():
               warnings.simplefilter("ignore")
               return np.median(a, axis=axis)
       
       
    1: def nanmedian(a, axis=None):
           "Slow nanmedian function used for unaccelerated dtypes."
           with warnings.catch_warnings():
               warnings.simplefilter("ignore")
               return np.nanmedian(a, axis=axis)
       
       
    1: def ss(a, axis=None):
           "Slow sum of squares used for unaccelerated dtypes."
           a = np.asarray(a)
           y = np.multiply(a, a).sum(axis)
           return y
       
       
    1: def anynan(a, axis=None):
           "Slow check for Nans used for unaccelerated dtypes."
           return np.isnan(a).any(axis)
       
       
    1: def allnan(a, axis=None):
           "Slow check for all Nans used for unaccelerated dtypes."
           return np.isnan(a).all(axis)
