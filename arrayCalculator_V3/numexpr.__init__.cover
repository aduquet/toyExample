       ###################################################################
       #  Numexpr - Fast numerical array expression evaluator for NumPy.
       #
       #      License: MIT
       #      Author:  See AUTHORS.txt
       #
       #  See LICENSE.txt and LICENSES/*.txt for details about copyright and
       #  rights to use.
       ####################################################################
       
    1: """
       Numexpr is a fast numerical expression evaluator for NumPy.  With it,
       expressions that operate on arrays (like "3*a+4*b") are accelerated
       and use less memory than doing the same calculation in Python.
       
       See:
       
       https://github.com/pydata/numexpr
       
       for more info about it.
       
       """
       
    1: from .__config__ import show as show_config, get_info
       
    1: if get_info('mkl'):
    1:     use_vml = True
       else:
           use_vml = False
       
    1: is_cpu_amd_intel = False # DEPRECATION WARNING: WILL BE REMOVED IN FUTURE RELEASE
       
       # cpuinfo imports were moved into the test submodule function that calls them 
       # to improve import times.
       
    1: import os, os.path
    1: import platform
    1: from numexpr.expressions import E
    1: from numexpr.necompiler import NumExpr, disassemble, evaluate, re_evaluate
    1: from numexpr.interpreter import MAX_THREADS
    1: from numexpr.utils import (_init_num_threads,
           get_vml_version, set_vml_accuracy_mode, set_vml_num_threads,
           set_num_threads, detect_number_of_cores, detect_number_of_threads)
       
       # Detect the number of cores
    1: ncores = detect_number_of_cores()
       # Initialize the number of threads to be used
    1: nthreads = _init_num_threads()
       # The default for VML is 1 thread (see #39)
    1: set_vml_num_threads(1)
       
    1: from . import version
    1: __version__ = version.version
       
    1: def print_versions():
           """Print the versions of software that numexpr relies on."""
           try:
               import numexpr.tests
               return numexpr.tests.print_versions()
           except ImportError:
               # To maintain Python 2.6 compatibility we have simple error handling
               raise ImportError('`numexpr.tests` could not be imported, likely it was excluded from the distribution.')
       
    1: def test(verbosity=1):
           """Run all the tests in the test suite."""
           try:
               import numexpr.tests
               return numexpr.tests.test(verbosity=verbosity)
           except ImportError:
               # To maintain Python 2.6 compatibility we have simple error handling
               raise ImportError('`numexpr.tests` could not be imported, likely it was excluded from the distribution.')
